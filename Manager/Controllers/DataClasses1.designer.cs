#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Manager.Controllers
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EZ Snips")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertService(Service instance);
    partial void UpdateService(Service instance);
    partial void DeleteService(Service instance);
    partial void InserttempCustomer(tempCustomer instance);
    partial void UpdatetempCustomer(tempCustomer instance);
    partial void DeletetempCustomer(tempCustomer instance);
    partial void InsertStylistProfileInfoe(StylistProfileInfoe instance);
    partial void UpdateStylistProfileInfoe(StylistProfileInfoe instance);
    partial void DeleteStylistProfileInfoe(StylistProfileInfoe instance);
    partial void InsertReservation(Reservation instance);
    partial void UpdateReservation(Reservation instance);
    partial void DeleteReservation(Reservation instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["EZ_SnipsConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Service> Services
		{
			get
			{
				return this.GetTable<Service>();
			}
		}
		
		public System.Data.Linq.Table<tempCustomer> tempCustomers
		{
			get
			{
				return this.GetTable<tempCustomer>();
			}
		}
		
		public System.Data.Linq.Table<StylistProfileInfoe> StylistProfileInfoes
		{
			get
			{
				return this.GetTable<StylistProfileInfoe>();
			}
		}
		
		public System.Data.Linq.Table<Reservation> Reservations
		{
			get
			{
				return this.GetTable<Reservation>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Services")]
	public partial class Service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _serviceid;
		
		private string _servicetitle;
		
		private string _servicedesc;
		
		private double _amount;
		
		private EntitySet<Reservation> _Reservations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnserviceidChanging(int value);
    partial void OnserviceidChanged();
    partial void OnservicetitleChanging(string value);
    partial void OnservicetitleChanged();
    partial void OnservicedescChanging(string value);
    partial void OnservicedescChanged();
    partial void OnamountChanging(double value);
    partial void OnamountChanged();
    #endregion
		
		public Service()
		{
			this._Reservations = new EntitySet<Reservation>(new Action<Reservation>(this.attach_Reservations), new Action<Reservation>(this.detach_Reservations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int serviceid
		{
			get
			{
				return this._serviceid;
			}
			set
			{
				if ((this._serviceid != value))
				{
					this.OnserviceidChanging(value);
					this.SendPropertyChanging();
					this._serviceid = value;
					this.SendPropertyChanged("serviceid");
					this.OnserviceidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_servicetitle", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string servicetitle
		{
			get
			{
				return this._servicetitle;
			}
			set
			{
				if ((this._servicetitle != value))
				{
					this.OnservicetitleChanging(value);
					this.SendPropertyChanging();
					this._servicetitle = value;
					this.SendPropertyChanged("servicetitle");
					this.OnservicetitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_servicedesc", DbType="VarChar(1000)")]
		public string servicedesc
		{
			get
			{
				return this._servicedesc;
			}
			set
			{
				if ((this._servicedesc != value))
				{
					this.OnservicedescChanging(value);
					this.SendPropertyChanging();
					this._servicedesc = value;
					this.SendPropertyChanged("servicedesc");
					this.OnservicedescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Float NOT NULL")]
		public double amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Reservation", Storage="_Reservations", ThisKey="serviceid", OtherKey="serviceid")]
		public EntitySet<Reservation> Reservations
		{
			get
			{
				return this._Reservations;
			}
			set
			{
				this._Reservations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Reservations(Reservation entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_Reservations(Reservation entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tempCustomers")]
	public partial class tempCustomer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _firstname;
		
		private string _lastname;
		
		private long _phonenumber;
		
		private int _tempid;
		
		private EntitySet<Reservation> _Reservations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnfirstnameChanging(string value);
    partial void OnfirstnameChanged();
    partial void OnlastnameChanging(string value);
    partial void OnlastnameChanged();
    partial void OnphonenumberChanging(long value);
    partial void OnphonenumberChanged();
    partial void OntempidChanging(int value);
    partial void OntempidChanged();
    #endregion
		
		public tempCustomer()
		{
			this._Reservations = new EntitySet<Reservation>(new Action<Reservation>(this.attach_Reservations), new Action<Reservation>(this.detach_Reservations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string firstname
		{
			get
			{
				return this._firstname;
			}
			set
			{
				if ((this._firstname != value))
				{
					this.OnfirstnameChanging(value);
					this.SendPropertyChanging();
					this._firstname = value;
					this.SendPropertyChanged("firstname");
					this.OnfirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastname", DbType="VarChar(50)")]
		public string lastname
		{
			get
			{
				return this._lastname;
			}
			set
			{
				if ((this._lastname != value))
				{
					this.OnlastnameChanging(value);
					this.SendPropertyChanging();
					this._lastname = value;
					this.SendPropertyChanged("lastname");
					this.OnlastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phonenumber", DbType="BigInt NOT NULL")]
		public long phonenumber
		{
			get
			{
				return this._phonenumber;
			}
			set
			{
				if ((this._phonenumber != value))
				{
					this.OnphonenumberChanging(value);
					this.SendPropertyChanging();
					this._phonenumber = value;
					this.SendPropertyChanged("phonenumber");
					this.OnphonenumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tempid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int tempid
		{
			get
			{
				return this._tempid;
			}
			set
			{
				if ((this._tempid != value))
				{
					this.OntempidChanging(value);
					this.SendPropertyChanging();
					this._tempid = value;
					this.SendPropertyChanged("tempid");
					this.OntempidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tempCustomer_Reservation", Storage="_Reservations", ThisKey="tempid", OtherKey="tempid")]
		public EntitySet<Reservation> Reservations
		{
			get
			{
				return this._Reservations;
			}
			set
			{
				this._Reservations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Reservations(Reservation entity)
		{
			this.SendPropertyChanging();
			entity.tempCustomer = this;
		}
		
		private void detach_Reservations(Reservation entity)
		{
			this.SendPropertyChanging();
			entity.tempCustomer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StylistProfileInfoes")]
	public partial class StylistProfileInfoe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Email;
		
		private string _PhoneNumber;
		
		private EntitySet<Reservation> _Reservations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    #endregion
		
		public StylistProfileInfoe()
		{
			this._Reservations = new EntitySet<Reservation>(new Action<Reservation>(this.attach_Reservations), new Action<Reservation>(this.detach_Reservations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(MAX)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(MAX)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(MAX)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StylistProfileInfoe_Reservation", Storage="_Reservations", ThisKey="Id", OtherKey="stylistid")]
		public EntitySet<Reservation> Reservations
		{
			get
			{
				return this._Reservations;
			}
			set
			{
				this._Reservations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Reservations(Reservation entity)
		{
			this.SendPropertyChanging();
			entity.StylistProfileInfoe = this;
		}
		
		private void detach_Reservations(Reservation entity)
		{
			this.SendPropertyChanging();
			entity.StylistProfileInfoe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reservations")]
	public partial class Reservation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _reser_id;
		
		private int _userid;
		
		private int _tempid;
		
		private System.DateTime _resStart;
		
		private System.DateTime _resEnd;
		
		private int _serviceid;
		
		private int _stylistid;
		
		private EntityRef<Service> _Service;
		
		private EntityRef<StylistProfileInfoe> _StylistProfileInfoe;
		
		private EntityRef<tempCustomer> _tempCustomer;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onreser_idChanging(int value);
    partial void Onreser_idChanged();
    partial void OnuseridChanging(int value);
    partial void OnuseridChanged();
    partial void OntempidChanging(int value);
    partial void OntempidChanged();
    partial void OnresStartChanging(System.DateTime value);
    partial void OnresStartChanged();
    partial void OnresEndChanging(System.DateTime value);
    partial void OnresEndChanged();
    partial void OnserviceidChanging(int value);
    partial void OnserviceidChanged();
    partial void OnstylistidChanging(int value);
    partial void OnstylistidChanged();
    #endregion
		
		public Reservation()
		{
			this._Service = default(EntityRef<Service>);
			this._StylistProfileInfoe = default(EntityRef<StylistProfileInfoe>);
			this._tempCustomer = default(EntityRef<tempCustomer>);
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reser_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int reser_id
		{
			get
			{
				return this._reser_id;
			}
			set
			{
				if ((this._reser_id != value))
				{
					this.Onreser_idChanging(value);
					this.SendPropertyChanging();
					this._reser_id = value;
					this.SendPropertyChanged("reser_id");
					this.Onreser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userid", DbType="Int NOT NULL")]
		public int userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if ((this._userid != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tempid", DbType="Int NOT NULL")]
		public int tempid
		{
			get
			{
				return this._tempid;
			}
			set
			{
				if ((this._tempid != value))
				{
					if (this._tempCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntempidChanging(value);
					this.SendPropertyChanging();
					this._tempid = value;
					this.SendPropertyChanged("tempid");
					this.OntempidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_resStart", DbType="SmallDateTime NOT NULL")]
		public System.DateTime resStart
		{
			get
			{
				return this._resStart;
			}
			set
			{
				if ((this._resStart != value))
				{
					this.OnresStartChanging(value);
					this.SendPropertyChanging();
					this._resStart = value;
					this.SendPropertyChanged("resStart");
					this.OnresStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_resEnd", DbType="SmallDateTime NOT NULL")]
		public System.DateTime resEnd
		{
			get
			{
				return this._resEnd;
			}
			set
			{
				if ((this._resEnd != value))
				{
					this.OnresEndChanging(value);
					this.SendPropertyChanging();
					this._resEnd = value;
					this.SendPropertyChanged("resEnd");
					this.OnresEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceid", DbType="Int NOT NULL")]
		public int serviceid
		{
			get
			{
				return this._serviceid;
			}
			set
			{
				if ((this._serviceid != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnserviceidChanging(value);
					this.SendPropertyChanging();
					this._serviceid = value;
					this.SendPropertyChanged("serviceid");
					this.OnserviceidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stylistid", DbType="Int NOT NULL")]
		public int stylistid
		{
			get
			{
				return this._stylistid;
			}
			set
			{
				if ((this._stylistid != value))
				{
					if (this._StylistProfileInfoe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstylistidChanging(value);
					this.SendPropertyChanging();
					this._stylistid = value;
					this.SendPropertyChanged("stylistid");
					this.OnstylistidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Reservation", Storage="_Service", ThisKey="serviceid", OtherKey="serviceid", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.Reservations.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.Reservations.Add(this);
						this._serviceid = value.serviceid;
					}
					else
					{
						this._serviceid = default(int);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StylistProfileInfoe_Reservation", Storage="_StylistProfileInfoe", ThisKey="stylistid", OtherKey="Id", IsForeignKey=true)]
		public StylistProfileInfoe StylistProfileInfoe
		{
			get
			{
				return this._StylistProfileInfoe.Entity;
			}
			set
			{
				StylistProfileInfoe previousValue = this._StylistProfileInfoe.Entity;
				if (((previousValue != value) 
							|| (this._StylistProfileInfoe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StylistProfileInfoe.Entity = null;
						previousValue.Reservations.Remove(this);
					}
					this._StylistProfileInfoe.Entity = value;
					if ((value != null))
					{
						value.Reservations.Add(this);
						this._stylistid = value.Id;
					}
					else
					{
						this._stylistid = default(int);
					}
					this.SendPropertyChanged("StylistProfileInfoe");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tempCustomer_Reservation", Storage="_tempCustomer", ThisKey="tempid", OtherKey="tempid", IsForeignKey=true)]
		public tempCustomer tempCustomer
		{
			get
			{
				return this._tempCustomer.Entity;
			}
			set
			{
				tempCustomer previousValue = this._tempCustomer.Entity;
				if (((previousValue != value) 
							|| (this._tempCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tempCustomer.Entity = null;
						previousValue.Reservations.Remove(this);
					}
					this._tempCustomer.Entity = value;
					if ((value != null))
					{
						value.Reservations.Add(this);
						this._tempid = value.tempid;
					}
					else
					{
						this._tempid = default(int);
					}
					this.SendPropertyChanged("tempCustomer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Reservation", Storage="_Customer", ThisKey="userid", OtherKey="userid", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Reservations.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Reservations.Add(this);
						this._userid = value.userid;
					}
					else
					{
						this._userid = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customers")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _userid;
		
		private string _lastname;
		
		private string _firstname;
		
		private string _email;
		
		private System.Nullable<int> _rewards;
		
		private long _phonenumber;
		
		private EntitySet<Reservation> _Reservations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuseridChanging(int value);
    partial void OnuseridChanged();
    partial void OnlastnameChanging(string value);
    partial void OnlastnameChanged();
    partial void OnfirstnameChanging(string value);
    partial void OnfirstnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnrewardsChanging(System.Nullable<int> value);
    partial void OnrewardsChanged();
    partial void OnphonenumberChanging(long value);
    partial void OnphonenumberChanged();
    #endregion
		
		public Customer()
		{
			this._Reservations = new EntitySet<Reservation>(new Action<Reservation>(this.attach_Reservations), new Action<Reservation>(this.detach_Reservations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if ((this._userid != value))
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string lastname
		{
			get
			{
				return this._lastname;
			}
			set
			{
				if ((this._lastname != value))
				{
					this.OnlastnameChanging(value);
					this.SendPropertyChanging();
					this._lastname = value;
					this.SendPropertyChanged("lastname");
					this.OnlastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string firstname
		{
			get
			{
				return this._firstname;
			}
			set
			{
				if ((this._firstname != value))
				{
					this.OnfirstnameChanging(value);
					this.SendPropertyChanging();
					this._firstname = value;
					this.SendPropertyChanged("firstname");
					this.OnfirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rewards", DbType="Int")]
		public System.Nullable<int> rewards
		{
			get
			{
				return this._rewards;
			}
			set
			{
				if ((this._rewards != value))
				{
					this.OnrewardsChanging(value);
					this.SendPropertyChanging();
					this._rewards = value;
					this.SendPropertyChanged("rewards");
					this.OnrewardsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phonenumber", DbType="BigInt NOT NULL")]
		public long phonenumber
		{
			get
			{
				return this._phonenumber;
			}
			set
			{
				if ((this._phonenumber != value))
				{
					this.OnphonenumberChanging(value);
					this.SendPropertyChanging();
					this._phonenumber = value;
					this.SendPropertyChanged("phonenumber");
					this.OnphonenumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Reservation", Storage="_Reservations", ThisKey="userid", OtherKey="userid")]
		public EntitySet<Reservation> Reservations
		{
			get
			{
				return this._Reservations;
			}
			set
			{
				this._Reservations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Reservations(Reservation entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Reservations(Reservation entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
}
#pragma warning restore 1591
